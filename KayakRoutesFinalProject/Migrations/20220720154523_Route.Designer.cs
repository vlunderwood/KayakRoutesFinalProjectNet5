// <auto-generated />
using System;
using KayakRoutesFinalProject.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace KayakRoutesFinalProject.Migrations
{
    [DbContext(typeof(RouteContext))]
    [Migration("20220720154523_Route")]
    partial class Route
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("KayakRoutesFinalProject.Models.Route", b =>
                {
                    b.Property<int>("RouteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Date")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Level")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Miles")
                        .IsRequired()
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Rating")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("StartPoint")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StopPoint")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RouteId");

                    b.ToTable("Routes");

                    b.HasData(
                        new
                        {
                            RouteId = 1,
                            Date = "04/05/2022",
                            Level = "Intermediate",
                            Location = "Skunk River",
                            Miles = 2.0,
                            Name = "Val",
                            Rating = 5,
                            StartPoint = "Anderson Access",
                            StopPoint = "Sleepy Hollow Access",
                            Type = "River"
                        },
                        new
                        {
                            RouteId = 2,
                            Date = "06/23/2022",
                            Level = "Advanced",
                            Location = "Raccoon River",
                            Miles = 4.0,
                            Name = "Noah",
                            Rating = 5,
                            StartPoint = "City Park Access",
                            StopPoint = "White Horse Access",
                            Type = "River"
                        },
                        new
                        {
                            RouteId = 3,
                            Date = "05/10/2022",
                            Level = "Intermediate",
                            Location = "Des Moines River",
                            Miles = 3.0,
                            Name = "Alexander",
                            Rating = 5,
                            StartPoint = "Skillet Creek Access",
                            StopPoint = "North Fraser Access",
                            Type = "River"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
